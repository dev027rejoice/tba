version: 2.1

# Docker image with Flutter Android and Fastlane
# https://circleci.com/blog/deploy-flutter-android/
executors:

  android-flutter-docker:
    docker:
      - image: supernovel/flutter-fastlane-android:2.5.1-ndk
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx2048m -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m"'

jobs:
  flutter_tests:
    description: "Run flutter code analyzer and unit tests"
    docker:
      - image: cirrusci/flutter:3.3.4
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "e2:fb:99:d7:c4:3a:f5:62:a1:0a:c8:f8:40:a0:1b:84"
      - run: flutter doctor
      - run: flutter packages get
      - run: flutter format 
      - run: flutter analyze
      - run: flutter test --coverage
      - run: flutter pub run coverde check 50

  build_and_deploy_ios_internal_test:
    macos:
      xcode: 12.5.0
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
    steps:
      - checkout
      - run:
          name: Fastlane iOS build and deply to TestFlight on AppStore
          command: cd tba/ios && fastlane supply init && bundle install && bundle exec fastlane ios internal_test

          no_output_timeout: 2h

  build_and_deploy_android_internal_test:
    description: "Build and deploy android app to google play beta track"
    executor: android-flutter-docker
    steps:
      - checkout
      - run: echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > tba/android/key.jks
      - run: echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > tba/android/key.properties
      - run: cd tba/android && fastlane supply init && bundle install && bundle exec fastlane android internal_test

  build_and_deploy_android_beta:
    description: "Build and deploy android app to google play beta track"
    executor: android-flutter-docker
    steps:
      - checkout
      - run: echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > tba/android/key.jks
      - run: echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > tba/android/key.properties
      - run: cd tba/android && fastlane supply init && bundle exec fastlane android beta

  build_and_deploy_android_prod:
    description: "Build and deploy android app to google play beta track"
    executor: android-flutter-docker
    steps:
      - checkout
      - run: echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > android/key.jks
      - run: echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > android/key.properties
      - run: cd android && bundle exec fastlane android production


  # TODO("Add job to Flutter Integration tests on Android emulator")
  # android_emulator_tests:
  #   macos:
  #     xcode: 12.3.0
  #   resource_class: large
  #   environment:
  #     HOMEBREW_NO_AUTO_UPDATE: 1
  #   steps:
  #     - checkout
  #     - run: java -version
  #     - run:
  #         name: set ANDROID_SDK_ROOT
  #         command: |
  #           echo 'export ANDROID_SDK_ROOT=$HOME/android-tools'  >> $BASH_ENV
  #     - restore_cache:
  #         key: android=tools-v1-{{ checksum "scripts/install-android-tools.sh" }}-{{ arch }}
  #     - run:
  #         name: Install Android tools
  #         command: |
  #           sh scripts/install-android-tools.sh
  #           echo 'export PATH=$ANDROID_SDK_ROOT/tools/bin:$PATH'  >> $BASH_ENV
  #           echo 'export PATH=$ANDROID_SDK_ROOT/tools:$PATH'  >> $BASH_ENV
  #           echo 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$PATH'  >> $BASH_ENV
  #           echo 'export PATH=$ANDROID_SDK_ROOT/emulator:$PATH'  >> $BASH_ENV
  #           source $BASH_ENV
  #           sdkmanager --list
  #     - save_cache:
  #         key: android=tools-v1-{{ checksum "scripts/install-android-tools.sh" }}-{{ arch }}
  #         paths:
  #           - /Users/distiller/android-tools
  #     - run:
  #         name: Create AVD
  #         command: make create-avd
  #     - run:
  #         name: Start AVD
  #         command: emulator-headless -avd android-tablet
  #         background: true
  #     - run:
  #         name: Wait for emulator
  #         command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
  #     - run:
  #         name: Install Flutter
  #         command: |
  #           git clone -b 1.22.4 https://github.com/flutter/flutter.git flutter
  #           echo 'export "PATH="$PATH:`pwd`/flutter/bin' >> $BASH_ENV
  #           source $BASH_ENV
  #     - restore_cache:
  #         name: Restoring Flutter cache
  #         keys:
  #           - flutter-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.lock" }}
  #           - flutter-cache-v1-{{ arch }}-{{ .Branch }}
  #           - flutter-cache-v1
  #     - restore_cache:
  #         name: Restoring Flutter dependencies
  #         keys:
  #           - pubs-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.lock" }}
  #           - pubs-cache-v1-{{ arch }}-{{ .Branch }}
  #           - pubs-cache-v1
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           echo 'Installing Ruby dependencies'
  #           pwd && bundle install
  #           echo 'Installing Flutter dependencies'
  #           flutter pub get
  #           echo 'Initializing CocoaPods'
  #           ./fastlane.rb ios prepare
  #     - save_cache:
  #         name: Saving Flutter cache
  #         key: flutter-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.lock" }}
  #         paths:
  #           - flutter/bin/cache
  #     - save_cache:
  #         name: Saving Flutter dependencies
  #         key: pubs-cache-v1-{{ arch }}-{{ .Branch }}-{{ checksum "pubspec.lock" }}
  #         paths:
  #           - flutter/packages
  #     - run: echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > key.jks
  #     - run: echo "$PLAY_STORE_UPLOAD_KEY_INFO" | base64 --decode > android/key.properties
  #     - run:
  #         name: Fastlane Android build and deploy to Beta track on GooglePlay
  #         command: cd android && fastlane android beta
  #         no_output_timeout: 1h


workflows:
  version: 2
  build_and_test_pr:
    jobs:
      - flutter_tests:
          filters:
            branches:
              ignore:
                - main
                - beta
      - build_and_deploy_ios_internal_test:
          requires:
           - flutter_tests
          filters:
            branches:
              ignore:
                - main
                - beta  
      - build_and_deploy_android_internal_test:
          requires:
           - flutter_tests
          filters:
            branches:
              ignore:
                - main
                - beta        

      # - 

  # build_and_deploy_beta:
  #   jobs:
  #     - flutter_tests:
  #         filters:
  #           tags:
  #             only:
  #               - /^release-dev-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #             only: /^beta\/.*/
  #     - build_and_deploy_android_beta:
  #         context:
  #           - CA-android-production
  #         requires:
  #          - flutter_tests
  #         filters:
  #           tags:
  #             only:
  #               - /^release-dev-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #             only: /^beta\/.*/
  #     -  build_and_deploy_ios:
  #         requires:
  #          - flutter_tests
  #         filters:
  #           tags:
  #             only:
  #               - /^release-dev-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #             only: /^beta\/.*/

  # build_and_deploy_main:
  #   jobs:
  #     - flutter_tests:
  #         filters:
  #           tags:
  #             only:
  #               - /^release-prod-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #             only: /^main\/.*/
  #     - build_and_deploy_android_prod:
  #         context:
  #           - CA-android-production
  #         requires:
  #          - flutter_tests
  #         filters:
  #           tags:
  #             only:
  #               - /^release-prod-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #             only: /^main\/.*/
  #     - build_and_deploy_ios:
  #         requires:
  #           - flutter_tests
  #         filters:
  #           tags:
  #             only:
  #               - /^release-prod-[0-9]+\.[0-9]+\.[0-9]+/
  #           branches:
  #               only: /^main\/.*/
